
"object"!=typeof JSON&&(JSON={}),function(){"use strict";function f(t){return 10>t?"0"+t:t}function quote(t){return escapable.lastIndex=0,escapable.test(t)?'"'+t.replace(escapable,function(t){var e=meta[t];return"string"==typeof e?e:"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+t+'"'}function str(t,e){var n,r,o,f,u,i=gap,p=e[t];switch(p&&"object"==typeof p&&"function"==typeof p.toJSON&&(p=p.toJSON(t)),"function"==typeof rep&&(p=rep.call(e,t,p)),typeof p){case"string":return quote(p);case"number":return isFinite(p)?String(p):"null";case"boolean":case"null":return String(p);case"object":if(!p)return"null";if(gap+=indent,u=[],"[object Array]"===Object.prototype.toString.apply(p)){for(f=p.length,n=0;f>n;n+=1)u[n]=str(n,p)||"null";return o=0===u.length?"[]":gap?"[\n"+gap+u.join(",\n"+gap)+"\n"+i+"]":"["+u.join(",")+"]",gap=i,o}if(rep&&"object"==typeof rep)for(f=rep.length,n=0;f>n;n+=1)"string"==typeof rep[n]&&(r=rep[n],o=str(r,p),o&&u.push(quote(r)+(gap?": ":":")+o));else for(r in p)Object.prototype.hasOwnProperty.call(p,r)&&(o=str(r,p),o&&u.push(quote(r)+(gap?": ":":")+o));return o=0===u.length?"{}":gap?"{\n"+gap+u.join(",\n"+gap)+"\n"+i+"}":"{"+u.join(",")+"}",gap=i,o}}"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(){return this.valueOf()});var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;"function"!=typeof JSON.stringify&&(JSON.stringify=function(t,e,n){var r;if(gap="",indent="","number"==typeof n)for(r=0;n>r;r+=1)indent+=" ";else"string"==typeof n&&(indent=n);if(rep=e,e&&"function"!=typeof e&&("object"!=typeof e||"number"!=typeof e.length))throw new Error("JSON.stringify");return str("",{"":t})}),"function"!=typeof JSON.parse&&(JSON.parse=function(text,reviver){function walk(t,e){var n,r,o=t[e];if(o&&"object"==typeof o)for(n in o)Object.prototype.hasOwnProperty.call(o,n)&&(r=walk(o,n),void 0!==r?o[n]=r:delete o[n]);return reviver.call(t,e,o)}var j;if(text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(t){return"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})),/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return j=eval("("+text+")"),"function"==typeof reviver?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}();

//easyui custom rules
//$.extend($.fn.validatebox.defaults.rules, { minLength: { validator: function (t, e) { return t.length >= e[0] }, message: "最少输入 {0} 个字符。" }, length: { validator: function (t, e) { var n = $.trim(t).length; return n >= e[0] && n <= e[1] }, message: "输入内容长度必须介于{0}和{1}之间." }, phone: { validator: function (t) { return /^((\(\d{2,3}\))|(\d{3}\-))?(\(0\d{2,3}\)|0\d{2,3}-)?[1-9]\d{6,7}(\-\d{1,4})?$/i.test(t) }, message: "格式不正确,请使用下面格式:020-88888888" }, mobile: { validator: function (t) { return /^(13|15|18)\d{9}$/i.test(t) }, message: "手机号码格式不正确" }, idcard: { validator: function (t) { return /^\d{15}(\d{2}[A-Za-z0-9])?$/i.test(t) }, message: "身份证号码格式不正确" }, intOrFloat: { validator: function (t) { return /^\d+(\.\d+)?$/i.test(t) }, message: "请输入数字，并确保格式正确" }, currency: { validator: function (t) { return /^\d+(\.\d+)?$/i.test(t) }, message: "货币格式不正确" }, qq: { validator: function (t) { return /^[1-9]\d{4,9}$/i.test(t) }, message: "QQ号码格式不正确" }, integer: { validator: function (t) { return /^[+]?[1-9]+\d*$/i.test(t) }, message: "请输入整数" }, chinese: { validator: function (t) { return /^[\u0391-\uFFE5]+$/i.test(t) }, message: "请输入中文" }, english: { validator: function (t) { return /^[A-Za-z]+$/i.test(t) }, message: "请输入英文" }, unnormal: { validator: function (t) { return /.+/i.test(t) }, message: "输入值不能为空和包含其他非法字符" }, username: { validator: function (t) { return /^[a-zA-Z][a-zA-Z0-9_]{2,15}$/i.test(t) }, message: "用户名不合法（字母开头，允许3-16字节，允许字母数字下划线）" }, faxno: { validator: function (t) { return /^((\(\d{2,3}\))|(\d{3}\-))?(\(0\d{2,3}\)|0\d{2,3}-)?[1-9]\d{6,7}(\-\d{1,4})?$/i.test(t) }, message: "传真号码不正确" }, zip: { validator: function (t) { return /^[1-9]\d{5}$/i.test(t) }, message: "邮政编码格式不正确" }, ip: { validator: function (t) { return /d+.d+.d+.d+/i.test(t) }, message: "IP地址格式不正确" }, name: { validator: function (t) { return /^[\u0391-\uFFE5]+$/i.test(t) | /^\w+[\w\s]+\w+$/i.test(t) }, message: "请输入姓名" }, carNo: { validator: function (t) { return /^[\u4E00-\u9FA5][\da-zA-Z]{6}$/.test(t) }, message: "车牌号码无效（例：粤J12350）" }, carenergin: { validator: function (t) { return /^[a-zA-Z0-9]{16}$/.test(t) }, message: "发动机型号无效(例：FG6H012345654584)" }, email: { validator: function (t) { return /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(t) }, message: "请输入有效的电子邮件账号(例：abc@126.com)" }, msn: { validator: function (t) { return /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(t) }, message: "请输入有效的msn账号(例：abc@hotnail(msn/live).com)" }, same: { validator: function (t, e) { return "" != $("#" + e[0]).val() && "" != t ? $("#" + e[0]).val() == t : !0 }, message: "两次输入的密码不一致！" }, password: { validator: function (t) { var e = !1; return t.length > 5 && (e = !0), e }, message: "密码至少6位" }, checkuser: { validator: function (t) { var e = !1; return $.ajax({ type: "POST", url: "/admin/service/general/checkusername.aspx", cache: !1, async: !1, data: { UserName: t }, dataType: "text", success: function (t) { "0" == t ? e = !0 : "1" == t && (e = !1) } }), e }, message: "您输入的用户名重复，请重新输入" }, number: { validator: function (t) { return /^\d+$/.test(t) }, message: "请输入数字" }, checkchannelid: { validator: function (t) { var e = !1; return $.ajax({ type: "POST", url: "/admin/service/channel/checkchannelid.aspx", cache: !1, async: !1, data: { ChannelID: t }, dataType: "text", success: function (t) { "true" == t ? e = !0 : "false" == t && (e = !1) } }), e }, message: "您输入的频道ID重复，请重新输入" }, checkchanneltypeattrunique: { validator: function (t) { var e = !1; return $.ajax({ type: "POST", url: "/admin/service/channeltype/checkchanneltypeattrunique.aspx", cache: !1, async: !1, data: { AttrUnique: t }, dataType: "text", success: function (t) { "true" == t ? e = !0 : "false" == t && (e = !1) } }), e }, message: "您输入的唯一标识重复，请重新输入" }, checkmark: { validator: function (t) { return /^[a-zA-Z0-9_("*)]{2,15}$/i.test(t) }, message: "该标识不合法（允许2-15字节，允许字母数字下划线）" } });


"object" != typeof JSON && (JSON = {}), function () { "use strict"; function f(t) { return 10 > t ? "0" + t : t } function quote(t) { return escapable.lastIndex = 0, escapable.test(t) ? '"' + t.replace(escapable, function (t) { var e = meta[t]; return "string" == typeof e ? e : "\\u" + ("0000" + t.charCodeAt(0).toString(16)).slice(-4) }) + '"' : '"' + t + '"' } function str(t, e) { var n, r, o, f, u, i = gap, p = e[t]; switch (p && "object" == typeof p && "function" == typeof p.toJSON && (p = p.toJSON(t)), "function" == typeof rep && (p = rep.call(e, t, p)), typeof p) { case "string": return quote(p); case "number": return isFinite(p) ? String(p) : "null"; case "boolean": case "null": return String(p); case "object": if (!p) return "null"; if (gap += indent, u = [], "[object Array]" === Object.prototype.toString.apply(p)) { for (f = p.length, n = 0; f > n; n += 1) u[n] = str(n, p) || "null"; return o = 0 === u.length ? "[]" : gap ? "[\n" + gap + u.join(",\n" + gap) + "\n" + i + "]" : "[" + u.join(",") + "]", gap = i, o } if (rep && "object" == typeof rep) for (f = rep.length, n = 0; f > n; n += 1) "string" == typeof rep[n] && (r = rep[n], o = str(r, p), o && u.push(quote(r) + (gap ? ": " : ":") + o)); else for (r in p) Object.prototype.hasOwnProperty.call(p, r) && (o = str(r, p), o && u.push(quote(r) + (gap ? ": " : ":") + o)); return o = 0 === u.length ? "{}" : gap ? "{\n" + gap + u.join(",\n" + gap) + "\n" + i + "}" : "{" + u.join(",") + "}", gap = i, o } } "function" != typeof Date.prototype.toJSON && (Date.prototype.toJSON = function () { return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null }, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function () { return this.valueOf() }); var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = { "\b": "\\b", "	": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, rep; "function" != typeof JSON.stringify && (JSON.stringify = function (t, e, n) { var r; if (gap = "", indent = "", "number" == typeof n) for (r = 0; n > r; r += 1) indent += " "; else "string" == typeof n && (indent = n); if (rep = e, e && "function" != typeof e && ("object" != typeof e || "number" != typeof e.length)) throw new Error("JSON.stringify"); return str("", { "": t }) }), "function" != typeof JSON.parse && (JSON.parse = function (text, reviver) { function walk(t, e) { var n, r, o = t[e]; if (o && "object" == typeof o) for (n in o) Object.prototype.hasOwnProperty.call(o, n) && (r = walk(o, n), void 0 !== r ? o[n] = r : delete o[n]); return reviver.call(t, e, o) } var j; if (text = String(text), cx.lastIndex = 0, cx.test(text) && (text = text.replace(cx, function (t) { return "\\u" + ("0000" + t.charCodeAt(0).toString(16)).slice(-4) })), /^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return j = eval("(" + text + ")"), "function" == typeof reviver ? walk({ "": j }, "") : j; throw new SyntaxError("JSON.parse") }) }();

